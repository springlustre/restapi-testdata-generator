spring:
#  redis:
#    host: localhost
#    port: 6379
#    database: 0
#    password: Redis@Decsion01
#    lettuce:
#      pool:
#        max-idle: 8
#        max-active: 8
#        max-wait: -1ms

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://112.126.102.160:13307/test?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
    username: test
    password: Test@123
    # 使用druid数据源
#    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    druid:
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,log4j,config
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=false;config.decrypt.key=${publicKey}
      filter:
        wall:
          enabled: true
          config:
            # 开启批量提交
            multi-statement-allow: true
      # 合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true

      #Druid监控web配置
      web-stat-filter:
        url-pattern: /*
        #exclusions:  *.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
      stat-view-servlet:
        url-pattern: /admin/sys/monitor/druid/*

